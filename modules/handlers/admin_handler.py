from telebot import types
from config.config import ADMIN_IDS

class AdminHandler:
    def __init__(self, bot, db):
        self.bot = bot
        self.db = db

    def handle_admin(self, message):
        if message.from_user.id in ADMIN_IDS:
            markup = types.InlineKeyboardMarkup(row_width=2)
            markup.add(
                types.InlineKeyboardButton("üí∞ –í—ã–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã", callback_data="admin_give_coins"),
                types.InlineKeyboardButton("üéÅ –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç", callback_data="admin_give_item"),
                types.InlineKeyboardButton("‚ö°Ô∏è –í—ã–¥–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é", callback_data="admin_give_energy"),
                types.InlineKeyboardButton("‚≠êÔ∏è –í—ã–¥–∞—Ç—å –ø—Ä–µ–º–∏—É–º", callback_data="admin_give_premium"),
                types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")
            )
            self.bot.reply_to(message, "üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=markup)
        else:
            self.bot.reply_to(message, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!")

    def handle_admin_callback(self, call):
        if call.from_user.id not in ADMIN_IDS:
            return self.bot.answer_callback_query(call.id, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!", show_alert=True)
            
        if call.data == "admin_give_coins":
            msg = self.bot.send_message(call.from_user.id, "üí∞ –í–≤–µ–¥–∏—Ç–µ: /give_coins [ID] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]")
            self.bot.register_next_step_handler(msg, self.admin_give_coins)
            
        elif call.data == "admin_give_item":
            msg = self.bot.send_message(call.from_user.id, "üéÅ –í–≤–µ–¥–∏—Ç–µ: /give_item [ID] [item_id]")
            self.bot.register_next_step_handler(msg, self.admin_give_item)
            
        elif call.data == "admin_give_energy":
            msg = self.bot.send_message(call.from_user.id, "‚ö°Ô∏è –í–≤–µ–¥–∏—Ç–µ: /give_energy [ID] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]")
            self.bot.register_next_step_handler(msg, self.admin_give_energy)
            
        elif call.data == "admin_give_premium":
            msg = self.bot.send_message(call.from_user.id, "‚≠êÔ∏è –í–≤–µ–¥–∏—Ç–µ: /give_premium [ID]")
            self.bot.register_next_step_handler(msg, self.admin_give_premium)
            
        elif call.data == "admin_stats":
            self.show_admin_stats(call.message)

    def admin_give_coins(self, message):
        if message.from_user.id not in ADMIN_IDS:
            return
        try:
            _, user_id, amount = message.text.split()
            user_id, amount = int(user_id), int(amount)
            self.db.add_coins(user_id, amount)
            self.bot.reply_to(message, f"‚úÖ –í—ã–¥–∞–Ω–æ {amount} –º–æ–Ω–µ—Ç –∏–≥—Ä–æ–∫—É {user_id}")
        except:
            self.bot.reply_to(message, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã!")

    def admin_give_item(self, message):
        if message.from_user.id not in ADMIN_IDS:
            return
        try:
            _, user_id, item_id = message.text.split()
            user_id, item_id = int(user_id), int(item_id)
            self.db.add_item_to_inventory(user_id, item_id)
            self.bot.reply_to(message, f"‚úÖ –í—ã–¥–∞–Ω –ø—Ä–µ–¥–º–µ—Ç {item_id} –∏–≥—Ä–æ–∫—É {user_id}")
        except:
            self.bot.reply_to(message, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã!")

    def show_admin_stats(self, message):
        total_users = self.db.get_total_users()
        total_coins = self.db.get_total_coins()
        premium_users = self.db.get_premium_users_count()
        
        stats = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

üë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {total_users}
üí∞ –í—Å–µ–≥–æ –º–æ–Ω–µ—Ç: {total_coins}
‚≠êÔ∏è –ü—Ä–µ–º–∏—É–º –∏–≥—Ä–æ–∫–æ–≤: {premium_users}
"""
        self.bot.reply_to(message, stats)
